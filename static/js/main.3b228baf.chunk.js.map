{"version":3,"sources":["components/App/firebase.js","components/App/logo.png","components/Login/Login.js","components/App/useUser.js","components/DrawPrint/SettingsForm.js","components/App/config.js","components/DrawPrint/PlotViewer.js","components/DrawPrint/DrawPrint.js","components/Library/Model/ModelContext.js","components/Library/Model/ModelCard.js","components/Library/Model/ModelList.js","components/Library/Model/ModelPage.js","components/Library/Library.js","components/Navigation/Navigation.js","components/Slicer/Slicer.js","components/DrawApp/Canvas/CanvasContext.js","components/DrawApp/Canvas/Canvas.js","components/DrawApp/Controls/SendToPrintButton.js","components/DrawApp/Controls/Controls.js","components/DrawApp/Header/Header.js","components/DrawApp/DrawApp.js","components/STLGenerator/SettingsForm.js","components/STLGenerator/Viewer.js","components/STLGenerator/STLGenerator.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","db","firestore","storage","retrieveCachedCollection","analytics","async","now","Date","storageKey","collection","path","itemsJson","localStorage","getItem","itemsWithTTL","JSON","parse","ttl","items","invalidateAt","orderBy","get","docs","forEach","item","data","id","setItem","stringify","e","console","log","Login","setUser","email","setEmail","useState","password","setPassword","error","setError","className","Form","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","message","src","logo","alt","width","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Text","Button","onClick","window","open","UserContext","createContext","SettingsForm","updatePlot","setDrawSettings","as","Row","column","Col","size","step","defaultValue","delta","e_per_mm","z","f","print_size_mm","table_size_mm","offset_x","offset_y","min","max","tool","fiestaCloudBackend","PlotViewer","props","useEffect","plotData","fetchError","Alert","variant","layout","showlegend","xaxis","scaleanchor","scaleratio","height","innerHeight","Spinner","animation","role","reducer","state","getGcodeUrl","uid","ref","child","storageUserDrawingGcodeRef","getDownloadURL","DrawPrint","useContext","user_id","gcodeFileUrl","setGcodeFileUrl","plot","setPlot","setFetchError","drawSettings","useReducer","getUserDrawingPlot","settings","fetch","method","headers","body","res","status","json","Error","Sentry","mounted","url","Container","fluid","sm","href","download","disabled","ModelContext","ModelCard","model","setCurrentModel","Card","Img","images","thumbnail","some","el","image","is_thumbnail","getThumbnailImage","Body","Title","name","dangerouslySetInnerHTML","__html","description","Badge","print_time","pieces_num","piece_size","colors_num","ModelList","models","setModels","tags","setTags","searchQuery","setSearchQuery","selectedTagId","setSelectedTagId","isLoading","setLoading","fetchModels","prevState","Tab","defaultActiveKey","Nav","Item","Link","eventKey","map","tag","idx","filtered_models","filter","tag_ids","includes","toUpperCase","filteredModels","ModelPage","currentModel","cleanCurrentModel","Carousel","files","file","title","Library","useModel","Provider","useStyles","createUseStyles","wrapper","padding","Navigation","classes","removeUser","Navbar","expand","Brand","to","Toggle","Collapse","Slicer","CanvasContext","React","CanvasProvider","children","isPrepared","setPrepared","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","x","setX","y","setY","stops","setStops","getEventPosition","nativeEvent","offsetX","offsetY","rect","getBoundingClientRect","touches","pageX","left","pageY","top","prepareCanvas","canvas","current","canvasSize","Math","innerWidth","navbarHeight","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","startDrawing","beginPath","moveTo","finishDrawing","closePath","length","clearCanvas","fillStyle","fillRect","draw","lineTo","stroke","useCanvas","Canvas","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","SendToPrintButton","isDisabled","setDisabled","sendToDB","doc","set","SendButton","Controls","fixed","bg","Header","DrawApp","updateSTL","setStlSettings","fontsList","text","depth","foundation_depth","foundation_offset","foundation_joiner_height","text_spacing","font","Viewer","stlUrl","fetchStlError","aspectgRatio","rotationSpeeds","initControlPosition","backgroundColor","fetchRetry","options","retries","ok","STLGenerator","setStlUrl","stlSettings","setfetchStlError","sendGenerateSTL","App","userString","getUser","saveUser","useUser","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b228baf.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/analytics\";\n\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyDsEXIV0OTzWuRX4XBiVB4a-3w4bP_fnCs\",\n  authDomain: \"chocolate-fiesta-cloud.firebaseapp.com\",\n  projectId: \"chocolate-fiesta-cloud\",\n  storageBucket: \"chocolate-fiesta-cloud.appspot.com\",\n  messagingSenderId: \"419100703725\",\n  appId: \"1:419100703725:web:42a642a456befea15045e4\",\n  measurementId: \"G-FRZNRK641V\"\n};\n\nexport const storageUserFolder = 'user';\nexport const firestoreUserDrawingCollection = 'user-drawing';\nexport const firestoreModelsCollectionPath = 'storage/model-library/public';\nexport const firestoreTagsCollectionPath = 'storage/model-library/tags';\nexport const userDrawingGcodeFilename = 'drawing.gcode';\n\nexport const firestoreAutoId = () => {\n  const CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\n  let autoId = ''\n\n  for (let i = 0; i < 20; i++) {\n    autoId += CHARS.charAt(\n      Math.floor(Math.random() * CHARS.length)\n    )\n  }\n  return autoId\n}\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const analytics = firebase.analytics();\n\nexport const firestoreUserDrawingDocument = (uid) => {\n  return db.collection(firestoreUserDrawingCollection).doc(uid)\n}\n\nexport const firestoreModelsCollection = () => {\n  return db.collection(firestoreModelsCollectionPath)\n}\n\nexport const firestoreTagsCollection = () => {\n  return db.collection(firestoreTagsCollectionPath)\n}\n\nexport const retrieveCachedCollection = async (collection) => {\n  try {\n    const now = Date.now();\n    const storageKey = collection.path;\n    const itemsJson = localStorage.getItem(storageKey);\n    const itemsWithTTL = itemsJson ? JSON.parse(itemsJson) : null;\n    const ttl = itemsWithTTL ? itemsWithTTL[\"ttl\"] : null;\n    let items = itemsWithTTL ? itemsWithTTL[\"items\"] : null;\n\n    if (!ttl || now > ttl) {\n      items = null;\n    }\n\n    if (!items) {\n      items = [];\n      const invalidateAt = now + 5 * 60 * 1000; // 5 minutes\n      const models_data = await collection.orderBy(\"name\").get();\n      models_data.docs.forEach(item => {\n        items = [...items, { ...item.data(), id: item.id }]\n      });\n      localStorage.setItem(storageKey, JSON.stringify(\n        {\n          items: items,\n          ttl: invalidateAt\n        }\n      ));\n    }\n    return items;\n  } catch (e) {\n    console.log(e)\n  }\n\n}\n\nexport const storageUserDrawingGcodeRef = (uid) => {\n  return storage.ref(storageUserFolder).child(uid).child(userDrawingGcodeFilename)\n}\n","export default __webpack_public_path__ + \"static/media/logo.8bc7b652.png\";","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Login.css';\nimport { auth } from '../App/firebase';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport logo from '../App/logo.png';\n\nexport default function Login({ setUser }) {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await auth.signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        setUser(user);\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  }\n\n  return (\n    <div className=\"text-center login-wrapper\">\n        <Form className=\"form-signin\" onSubmit={handleSubmit}>\n          <img className=\"mb-4\" src={logo} alt=\"\" width=\"120\"></img>\n          <h1 className=\"h3 mb-3 font-weight-normal\">Авторизация</h1>\n          <Form.Group controlId=\"inputEmail\">\n            <Form.Label className=\"sr-only\">Email адрес</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} />\n            <Form.Text className=\"text-danger\">\n              {error}\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"inputPassword\">\n            <Form.Label className=\"sr-only\">Пароль</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n          </Form.Group>\n          <Button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n            Войти\n          </Button>\n          <Button className=\"btn btn-lg btn-secondary btn-block\"  onClick={() => window.open(\"https://chocolatefiesta.ru/cloud/\", '_blank')}>\n            Получить доступ\n          </Button>\n        </Form>\n    </div>\n  )\n}\n\nLogin.propTypes = {\n  setUser: PropTypes.func.isRequired\n};","import { useState, createContext } from 'react';\n\n\nexport const UserContext = createContext();\n\nexport function useUser() {\n  const getUser = () => {\n    const userString = localStorage.getItem('user');\n    const user = userString ? JSON.parse(userString) : null;\n    return user\n  };\n  const [user, setUser] = useState(getUser());\n\n  const saveUser = user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    setUser(user);\n  };\n\n  const removeUser = () => {\n    saveUser(null);\n  };\n\n  return {\n    setUser: saveUser,\n    user,\n    removeUser\n  }\n}","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function SettingsForm({updatePlot, setDrawSettings}) {\n\n    return (\n        <>\n            <Form>\n                <Form.Group as={Row}>\n                    <Form.Label column >Расстояние между узлами, мм</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.1\" defaultValue=\"2.0\" onChange={e => setDrawSettings({ delta: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Экструзия, ед./мм</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.01\" defaultValue=\"0.03\" onChange={e => setDrawSettings({ e_per_mm: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Z, мм</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.01\" defaultValue=\"0.25\" onChange={e => setDrawSettings({ z: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Float</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"10\" defaultValue=\"2400\" onChange={e => setDrawSettings({ f: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Размер печати, мм</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"120\" onChange={e => setDrawSettings({ print_size_mm: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Размер стола, мм</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"200\" onChange={e => setDrawSettings({ table_size_mm: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Оффсет X, мм</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"0\" onChange={e => setDrawSettings({ offset_x: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Оффсет Y, мм</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"0\" onChange={e => setDrawSettings({ offset_y: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Экструдер</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" min=\"0\" max=\"1\" defaultValue=\"0\" onChange={e => setDrawSettings({ tool: e.target.value })} />\n                    </Col>\n                </Form.Group>\n            </Form>\n            <Button onClick={() => updatePlot()}>Обновить</Button>\n            \n        </>\n    );\n}\n\n\n","export const fiestaCloudBackend = 'https://cloud-api.chocolatefiesta.ru';","import React, {useEffect} from 'react';\nimport Plot from 'react-plotly.js';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\n\n\nexport default function PlotViewer(props) {\n    useEffect(() => {}, [props.plotData, props.fetchError]); \n\n    if (props.fetchError) {\n        return (<>\n            <Alert variant='danger'>\n                {props.fetchError}\n            </Alert>\n        </>)\n    }\n\n    if (!props.plotData) {\n        return (<>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </>)\n      }\n  return (\n    <>\n        <Plot data={props.plotData.data} layout={{ showlegend: false, xaxis: { scaleanchor: \"y\", scaleratio: 1 }, height: window.innerHeight * 0.6 }} />\n    </>\n  );\n}\n","import React, { useContext, useState, useEffect, useReducer } from 'react';\nimport { UserContext } from '../App/useUser'\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SettingsForm from './SettingsForm';\nimport { storageUserDrawingGcodeRef } from '../App/firebase'\nimport { fiestaCloudBackend } from '../App/config';\nimport PlotViewer from './PlotViewer';\nimport * as Sentry from \"@sentry/react\";\n\n\nfunction reducer(state, item) {\n  return { ...state, ...item }\n}\n\nfunction getGcodeUrl(uid) {\n  return storageUserDrawingGcodeRef(uid).getDownloadURL()\n    .catch(function (error) {\n      console.log(error)\n    })\n}\n\nexport default function DrawPrint() {\n  const { user } = useContext(UserContext);\n  const user_id = user.user.uid;\n  const [gcodeFileUrl, setGcodeFileUrl] = useState('#');\n  const [plot, setPlot] = useState(null);\n  const [fetchError, setFetchError] = useState(null);\n  const [drawSettings, setDrawSettings] = useReducer(reducer, {});\n\n  function getUserDrawingPlot(uid, settings) {\n    setFetchError(null);\n    setFetchError(null);\n    setPlot(null);\n    return fetch(fiestaCloudBackend + '/api/user/' + uid + \"/drawing/\", {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(settings)\n    })\n      .then(res => {\n        console.log(res)\n        if (res.status === 201 || res.status === 200) {\n          return res.json()\n        } else if (res.status === 204) {\n          setFetchError('Рисунок не найден. Перейдите на страницу \"Рисование\" и отправьте рисунок в печать');\n        } else {\n          setFetchError('Ошибка загрузки рисунка. Попробуйте позже.');\n        }\n        throw new Error(res)\n      })\n      .then(data => {\n        setPlot(JSON.parse(data))\n      })\n      .catch(error => {\n        Sentry.captureException(new Error(error));\n      })\n  }\n\n  function updatePlot() {\n    getUserDrawingPlot(user_id, drawSettings)\n    getGcodeUrl(user_id).then(url => setGcodeFileUrl(url));\n  }\n\n  useEffect(() => {\n    let mounted = true;\n    getGcodeUrl(user_id)\n      .then(url => {\n        if (mounted) {\n          setGcodeFileUrl(url)\n        }\n      })\n    getUserDrawingPlot(user_id, {})\n    return () => mounted = false;\n  }, [user_id])\n\n  return (\n    <>\n      <Container fluid=\"xl\">\n        <Row>\n          <Col sm={8}>\n            <PlotViewer fetchError={fetchError} plotData={plot}></PlotViewer>\n          </Col>\n          <Col sm={4} >\n            <SettingsForm updatePlot={updatePlot} setDrawSettings={setDrawSettings} />\n          </Col>\n        </Row>\n        <Row>\n          <Col >\n            <Button as=\"a\" target=\"_blank\" href={gcodeFileUrl} className=\"control-button\" size=\"lg\" variant=\"primary\" download>Скачать GCODE</Button>\n            <Button as=\"a\" target=\"_blank\" href='/draw' className=\"control-button\" size=\"lg\" variant=\"secondary\">Рисование</Button>\n            <Button disabled={true} className=\"control-button\" variant=\"secondary\" size=\"lg\">Отправить в печать</Button>\n          </Col>\n        </Row>\n      </Container>\n\n    </>\n  );\n}\n","import { useState, createContext } from 'react';\n\n\nexport const ModelContext = createContext();\n\nexport function useModel() {\n  const [currentModel, setCurrentModel] = useState(null);\n\n  const cleanCurrentModel = () => {\n    setCurrentModel(null);\n  };\n\n  return {\n    currentModel,\n    setCurrentModel,\n    cleanCurrentModel\n  }\n}","import React, { useContext } from 'react';\nimport { Card, Badge } from 'react-bootstrap';\nimport { ModelContext } from './ModelContext';\nimport './Model.css';\n\n\nexport default function ModelCard({ model, ...props }) {\n    const { setCurrentModel } = useContext(ModelContext);\n\n    function getThumbnailImage(images) {\n        let thumbnail;\n        images.some((el) => {\n            thumbnail = el.image.src;\n            return el.is_thumbnail;\n        });\n        return thumbnail;\n    }\n\n    return (\n        <>\n            <Card className=\"model-card\" key={model.id} onClick={() => setCurrentModel(model)} role=\"button\">\n                <Card.Img className=\"model-card-image\" variant=\"top\" src={getThumbnailImage(model.images)} />\n                <Card.Body>\n                    <Card.Title>{model.name}</Card.Title>\n                    <Card.Text>\n                        <span dangerouslySetInnerHTML={{ __html: model.description }} />\n                    </Card.Text>\n                    <Badge variant=\"secondary\">{model.print_time} минут</Badge>{' '}\n                    <Badge variant=\"secondary\">{model.pieces_num} шт.</Badge>{' '}\n                    <Badge variant=\"secondary\">{model.piece_size}</Badge>{' '}\n                    <Badge variant=\"secondary\">{model.colors_num}</Badge>{' '}\n                </Card.Body>\n            </Card>\n\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Form, Container, Row, Col, Tab, Nav, Spinner } from 'react-bootstrap';\nimport { firestoreModelsCollection, firestoreTagsCollection, retrieveCachedCollection } from '../../App/firebase';\nimport ModelCard from './ModelCard';\nimport './ModelList.css';\n\n\nexport default function ModelList() {\n  const [models, setModels] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedTagId, setSelectedTagId] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  const fetchModels = async () => {\n    setLoading(true);\n    let items = await retrieveCachedCollection(firestoreModelsCollection());\n    setModels(prevState => {\n      return [...items];\n    });\n\n    let tags = await retrieveCachedCollection(firestoreTagsCollection());\n    setTags(prevState => {\n      return [...tags];\n    });\n    setLoading(false);\n  }\n\n  const filteredModels = () => {\n    let filtered_models = [...models];\n    if (selectedTagId) {\n      filtered_models = filtered_models.filter((e) => {\n        return e.tag_ids?.includes(selectedTagId)\n      })\n    }\n    return filtered_models.filter(\n      (e) => { return e.name.toUpperCase().includes(searchQuery.toUpperCase()) }\n    )\n  }\n\n  useEffect(() => {\n    fetchModels();\n  }, [])\n\n  return (\n    <div className=\"model-list-wrapper\">\n      <Container>\n        {isLoading &&\n          <Row><Spinner animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\"></span>\n          </Spinner></Row>}\n        <Row className=\"model-tags-row\">\n          <Tab.Container id=\"model-tags-tabs\" defaultActiveKey=\"0\">\n            <Nav variant=\"pills\">\n              <Nav.Item>\n                <Nav.Link disabled eventKey=\"-1\">Категории</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"0\" onClick={e => setSelectedTagId(null)}>Все модели</Nav.Link>\n              </Nav.Item>\n              {\n                tags && tags.map((tag, idx) => {\n                  return (\n                    <>\n                      <Nav.Item>\n                        <Nav.Link eventKey={tag.id} onClick={e => setSelectedTagId(tag.id)}>{tag.name}</Nav.Link>\n                      </Nav.Item>\n                    </>\n                  )\n                }\n                )\n              }\n            </Nav>\n          </Tab.Container>\n        </Row>\n\n        <Form>\n          <Form.Row>\n            <Col>\n              <Form.Control type=\"text\" placeholder=\"Поиск\" onChange={e => setSearchQuery(e.target.value)} />\n            </Col>\n          </Form.Row>\n        </Form>\n\n        <Row>\n\n          {\n            models && filteredModels().map((model, idx) => {\n              return (\n                <>\n                  <ModelCard key={model.id} model={model} />\n                </>\n              )\n            }\n            )\n          }\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Button, Carousel, Row, Col, Badge } from 'react-bootstrap';\nimport { ModelContext } from './ModelContext';\n\nexport default function ModelPage() {\n    const { currentModel: model, cleanCurrentModel } = useContext(ModelContext);\n\n    return (\n        <>\n            <Button variant=\"link\" onClick={cleanCurrentModel}>⟵ Вернуться назад</Button>\n            <Row>\n                <Col sm={5}>\n                    <Carousel>\n                        {model.images.map(image => {\n                            return (\n                                <Carousel.Item>\n                                    <img\n                                        className=\"d-block w-100\"\n                                        src={image.image.src}\n                                        alt=\"First slide\"\n                                    />\n                                </Carousel.Item>)\n                        })}\n                    </Carousel>\n                </Col>\n                <Col sm={7} >\n                    <h2>{model.name}</h2>\n                    <span dangerouslySetInnerHTML={{ __html: model.description }} />\n                    <h4>\n                        <Badge variant=\"secondary\">{model.print_time} минут</Badge>{' '}\n                        <Badge variant=\"secondary\">{model.pieces_num} шт.</Badge>{' '}\n                        <Badge variant=\"secondary\">{model.piece_size}</Badge>{' '}\n                        <Badge variant=\"secondary\">{model.colors_num}</Badge>{' '}\n                    </h4>\n                    <h4>Файлы</h4>\n                    <ul>\n                        {model.files.map(file => {\n                            return (\n                                <li>\n                                    <Button as=\"a\" target=\"_blank\" variant=\"link\" href={file.file.src} download={file.file.title}>\n                                        {file.name || file.file.title}\n                                    </Button>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </Col>\n            </Row>\n        </>\n    )\n}\n","import React from 'react';\nimport ModelList from './Model/ModelList';\nimport ModelPage from './Model/ModelPage';\nimport './Library.css';\nimport { ModelContext, useModel } from './Model/ModelContext';\nimport { Container } from 'react-bootstrap';\n\n\nexport default function Library() {\n  const { currentModel, setCurrentModel, cleanCurrentModel } = useModel();\n\n  if (!currentModel) {\n    return (\n      <div className=\"wrapper\">\n        <ModelContext.Provider value={{ currentModel, setCurrentModel, cleanCurrentModel }} >\n          <Container fluid=\"xl\" >\n            <h2>Библиотека моделей</h2>\n            <ModelList />\n          </Container>\n\n        </ModelContext.Provider>\n      </div >\n\n    );\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <ModelContext.Provider value={{ currentModel, setCurrentModel, cleanCurrentModel }} >\n        <Container fluid=\"xl\" >\n          <ModelPage />\n        </Container>\n\n\n      </ModelContext.Provider>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { UserContext } from '../App/useUser';\nimport { createUseStyles } from 'react-jss';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = createUseStyles({\n    wrapper: {\n        padding: [15],\n    }\n});\n\nexport default function Navigation() {\n    const classes = useStyles();\n    const { user, removeUser } = useContext(UserContext);\n    return (\n        <div className={classes.wrapper}>\n            <Navbar className=\"justify-content-between\" expand=\"lg\">\n                <Navbar.Brand>\n                    <Link className=\"navbar-brand\" to=\"/\">Chocolate Fiesta Cloud β</Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"nav-link\" to=\"/library\">Models Library</Link>\n                        <Link className=\"nav-link\" to=\"/draw-print\">Drawing Print</Link>\n                        <Link className=\"nav-link\" to=\"/stl-generator\">3D Text Generator</Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        <Nav.Link disabled={true}>You are logged in as {user.user.email}</Nav.Link>\n                        <Nav.Link onClick={removeUser}>Log out</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    );\n}","import React from 'react';\nimport './Slicer.css';\n\n\nexport default function Slicer() {\n    return (\n        <div className=\"dash-wrapper\">\n            <h2>Привет, это Chocolate Fiesta Cloud</h2>\n        </div>\n    );\n}\n","import React, { useContext, useRef, useState } from \"react\";\n\nexport const CanvasContext = React.createContext();\n\n\nexport const CanvasProvider = ({ children }) => {\n  const [isPrepared, setPrepared] = useState(false)\n  const [isDrawing, setIsDrawing] = useState(false)\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [x, setX] = useState([]);\n  const [y, setY] = useState([]);\n  const [stops, setStops] = useState([]);\n\n  const prepareCanvas = () => {\n    if (isPrepared) { return }\n    const navbarHeight = 64;\n    const canvas = canvasRef.current\n    const canvasSize = Math.min(window.innerWidth, window.innerHeight - navbarHeight * 2)\n    canvas.width = canvasSize * 2;\n    canvas.height = canvasSize * 2;\n    canvas.style.width = `${canvasSize}px`;\n    canvas.style.height = `${canvasSize}px`;\n\n    const context = canvas.getContext(\"2d\")\n    context.scale(2, 2);\n    context.lineCap = \"round\";\n    context.strokeStyle = \"brown\";\n    context.lineWidth = 14;\n    contextRef.current = context;\n    setPrepared(true);\n  };\n\n  const startDrawing = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = getEventPosition(nativeEvent);\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n    setStops([...stops, x.length - 1]);\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const { offsetX, offsetY } = getEventPosition(nativeEvent);\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    setX([...x, offsetX]);\n    setY([...y, offsetY]);\n  };\n\n  const getEventPosition = (nativeEvent) => {\n    console.log(nativeEvent.type);\n    if (nativeEvent.type === \"mousemove\" || nativeEvent.type === \"mousedown\") {\n      const { offsetX, offsetY } = nativeEvent;\n      return {offsetX, offsetY}\n    } else if (nativeEvent.type === \"touchstart\" || nativeEvent.type === \"touchmove\") {\n      const rect = nativeEvent.target.getBoundingClientRect(); \n      const offsetX = nativeEvent.touches[0].pageX - rect.left;\n      const offsetY = nativeEvent.touches[0].pageY - rect.top;;\n      return {offsetX, offsetY}\n    }\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\")\n    context.fillStyle = \"white\"\n    context.fillRect(0, 0, canvas.width, canvas.height)\n    setX([]);\n    setY([]);\n    setStops([]);\n  }\n\n  return (\n    <CanvasContext.Provider\n      value={{\n        canvasRef,\n        contextRef,\n        x,\n        y,\n        stops,\n        isPrepared,\n        prepareCanvas,\n        startDrawing,\n        finishDrawing,\n        clearCanvas,\n        draw\n      }}\n    >\n      {children}\n    </CanvasContext.Provider>\n  );\n};\n\nexport const useCanvas = () => useContext(CanvasContext);\n","import React, { useEffect } from \"react\";\nimport { useCanvas } from \"./CanvasContext\";\nimport \"./Canvas.css\";\n\nexport function Canvas() {\n  const {\n    canvasRef,\n    prepareCanvas,\n    startDrawing,\n    finishDrawing,\n    draw,\n  } = useCanvas();\n\n  useEffect(prepareCanvas, [prepareCanvas]);\n\n  return (\n    <canvas\n      onMouseDown={startDrawing}\n      onMouseUp={finishDrawing}\n      onMouseMove={draw}\n\n      onTouchStart={startDrawing}\n      onTouchEnd={finishDrawing}\n      onTouchMove={draw}\n\n      ref={canvasRef}\n    />\n  );\n}","import React, { useContext, useState, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\n\nimport \"./Controls.css\"\nimport { useCanvas } from '../Canvas/CanvasContext'\nimport { UserContext } from '../../App/useUser';\nimport { firestoreUserDrawingDocument } from '../../App/firebase'\n\n\nexport function SendToPrintButton() {\n  const { user } = useContext(UserContext);\n  const { x, y, stops } = useCanvas();\n  const [isDisabled, setDisabled] = useState(false);\n\n  useEffect(() => {\n    setDisabled(false);\n  }, [x])\n\n  function sendToDB() {\n    return firestoreUserDrawingDocument(user.user.uid)\n      .set({\n        x: x,\n        y: y,\n        stops: stops\n      })\n  }\n\n  function SendButton() {\n    const [isLoading, setLoading] = useState(false);\n    \n    useEffect(() => {\n      if (isLoading) {\n        sendToDB().then(() => {\n          setLoading(false);\n          setDisabled(true);\n        });\n      }\n    }, [isLoading]);\n\n    const handleClick = () => {\n      setLoading(true);\n    }\n\n    return (\n      <Button\n        disabled={isLoading || isDisabled || x.length === 0}\n        className=\"control-button\" size=\"lg\" variant=\"success\"\n        onClick={!isLoading ? handleClick : null}\n      >\n        {isLoading ? 'Отправка...' : isDisabled ? 'Отправлено' : 'Отправить в печать'}\n      </Button>\n    );\n  }\n\n  return (<SendButton />);\n}\n","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport \"./Controls.css\"\nimport { useCanvas } from '../Canvas/CanvasContext'\nimport { SendToPrintButton } from \"./SendToPrintButton\";\n\nexport function Controls() {\n  const { x, clearCanvas } = useCanvas()\n  return (\n    <>\n      <div className=\"controls-wrapper\">\n        <Navbar fixed=\"bottom\" bg=\"dark\" className=\"justify-content-center\">\n          <Nav>\n            <Button onClick={clearCanvas} disabled={x.length === 0} className=\"control-button\" size=\"lg\" variant=\"light\">Очистить</Button>\n            <SendToPrintButton />\n          </Nav>\n        </Navbar>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nexport function Header() {\n    return (\n        <>\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"justify-content-center\">\n                    <Navbar.Brand href=\"/\">\n                        Chocolate Fiesta Draw\n                    </Navbar.Brand>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <Nav.Link href=\"/draw-print\">Перейти к печати</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        </>\n    );\n}\n","import React from 'react'\nimport { Canvas } from './Canvas/Canvas'\nimport { Controls } from './Controls/Controls'\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { CanvasProvider } from \"./Canvas/CanvasContext\";\nimport { firebaseConfig } from '../App/firebase'\nimport { FirestoreProvider } from \"@react-firebase/firestore\";\nimport \"./DrawApp.css\"\nimport { Header } from './Header/Header';\n\n\nfunction DrawApp() {\n  return (\n    <>\n    <div className=\"draw-app-wrapper\">\n      <FirestoreProvider {...firebaseConfig} firebase={firebase}>\n        <CanvasProvider>\n          <Header />\n          <Canvas />\n          <Controls />\n        </CanvasProvider>\n      </FirestoreProvider>\n      </div>\n    </>\n  );\n}\n\nexport default DrawApp;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function SettingsForm({ updateSTL, setStlSettings }) {\n    const fontsList = [\n        {\"value\": \"Pacifico\", \"title\": \"Pacifico\"},\n        {\"value\": \"Liberation Sans:style=Bold\", \"title\": \"Sans Bold\"},\n        {\"value\": \"Liberation Serif:style=Bold\", \"title\": \"Serif Bold\"},\n    ]\n\n    return (\n        <>\n            <Form>\n                <Form.Group as={Row}>\n                    <Form.Label column >Text</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"text\" defaultValue=\"Chocolate Fiesta\" onChange={e => setStlSettings({ text: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Heigth, mm</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"5\" onChange={e => setStlSettings({ depth: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Width, mm</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"100\" onChange={e => setStlSettings({ width: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Heigth of foundation, mm</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"10\" defaultValue=\"2\" onChange={e => setStlSettings({ foundation_depth: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Width of foundation, mm</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"0.1\" defaultValue=\"2\" onChange={e => setStlSettings({ foundation_offset: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Word merger foundation width, mm</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" step=\"1\" defaultValue=\"7\" onChange={e => setStlSettings({ foundation_joiner_height: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Letter spacing, mm</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" type=\"number\" defaultValue=\"1.0\" onChange={e => setStlSettings({ text_spacing: e.target.value })} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column >Font</Form.Label>\n                    <Col >\n                        <Form.Control size=\"sm\" as=\"select\" defaultValue={fontsList[0].value} onChange={e => setStlSettings({ font: e.target.value })}>\n                            {fontsList.map(font => {\n                                return (<option value={font.value}>{font.title}</option>)\n                            })}\n                        </Form.Control>\n                    </Col>\n                </Form.Group>\n            </Form>\n            <Button onClick={() => updateSTL()}>Generate</Button>\n        </>\n    );\n}\n","import { ModelViewer } from 'react-3d-model-viewer'\nimport React, { useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\n\nimport \"./STLGenerator.css\"\n\nexport default function Viewer(props) {\n    useEffect(() => { }, [props.stlUrl, props.fetchStlError]);\n\n    if (props.fetchStlError) {\n        return (<>\n            <Alert variant='danger'>\n                Возникла ошибка генерации модели, пожалуйста, попробуйте снова.\n            </Alert>\n        </>)\n    }\n\n    if (props.stlUrl === '') {\n        return (<>\n            <Alert variant='primary'>\n                Выполняется генерация модели. Процесс может занять до 1 минуты.\n            </Alert>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </>)\n    }\n    return (\n        <>\n            <ModelViewer width=\"100%\" aspectgRatio=\"100%\" rotationSpeeds={[0, 0, 0]} initControlPosition={[0, 0, 0.4]} backgroundColor=\"#ffffff\" url={props.stlUrl} />\n        </>\n    );\n}\n","import React, { useContext, useState, useEffect, useReducer } from 'react';\nimport { UserContext } from '../App/useUser'\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nimport SettingsForm from './SettingsForm';\nimport \"./STLGenerator.css\"\nimport { fiestaCloudBackend } from '../App/config';\nimport Viewer from './Viewer';\nimport * as Sentry from \"@sentry/react\";\n\n\nfunction reducer(state, item) {\n  return { ...state, ...item }\n}\n\nfunction fetchRetry(url, options = {}, retries = 3) {\n  return fetch(url, options)\n    .then(res => {\n      if (res.ok) {\n        return res.json()\n      }\n      if (retries > 0) {\n        return fetchRetry(url, options, retries - 1)\n      } else {\n        throw new Error(res)\n      }\n    })\n    .catch(error => {\n      if (retries > 0) {\n        return fetchRetry(url, options, retries - 1)\n      } else {\n        throw new Error(error)\n      }\n    }\n    )\n}\n\nexport default function STLGenerator() {\n  const { user } = useContext(UserContext);\n  const user_id = user.user.uid;\n  const [stlUrl, setStlUrl] = useState('');\n  const [stlSettings, setStlSettings] = useReducer(reducer, {});\n  const [fetchStlError, setfetchStlError] = useState(false);\n\n  function sendGenerateSTL(uid, settings) {\n    setStlUrl('');\n    setfetchStlError(false);\n    return fetchRetry(fiestaCloudBackend + '/api/stl-generator/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(settings),\n    })\n      .then(data => {\n        if (data) {\n          setStlUrl(data.url)\n        } else {\n          setfetchStlError(true);\n          Sentry.captureException(new Error(data));\n        }\n      })\n      .catch(error => {\n        setfetchStlError(true);\n        Sentry.captureException(new Error(error));\n      })\n  }\n\n  function updateSTL() {\n    sendGenerateSTL(user_id, stlSettings);\n  }\n\n  useEffect(() => {\n    let mounted = true;\n    sendGenerateSTL(user_id, {}).then(data => {\n      if (mounted && data != null) {\n        setStlUrl(data.url)\n      }\n    });\n    return () => mounted = false;\n  }, [user_id])\n\n  return (\n    <>\n      <Container fluid=\"xl\" className=\"stl-generator-wrapper\">\n        <Row>\n          <Col sm={7}>\n            <Viewer fetchStlError={fetchStlError} stlUrl={stlUrl}></Viewer>\n          </Col>\n          <Col sm={5} >\n            <SettingsForm updateSTL={updateSTL} setStlSettings={setStlSettings} />\n          </Col>\n        </Row>\n        <Row>\n          <Col >\n            <Button as=\"a\" target=\"_blank\" href={stlUrl} className=\"control-button\" size=\"lg\" variant=\"primary\" download>Download STL</Button>\n            <Button disabled={true} className=\"control-button\" size=\"lg\" variant=\"primary\">Send to printer</Button>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Login from '../Login/Login';\nimport DrawPrint from '../DrawPrint/DrawPrint';\nimport Library from '../Library/Library';\nimport Navigation from '../Navigation/Navigation';\nimport Slicer from '../Slicer/Slicer';\nimport { useUser, UserContext } from './useUser';\nimport DrawApp from '../DrawApp/DrawApp';\nimport STLGenerator from '../STLGenerator/STLGenerator';\n\nfunction App() {\n  const { user, setUser, removeUser } = useUser();\n\n  if (!user) {\n    return <Login setUser={setUser} />\n  }\n\n  return (\n    <>\n      <UserContext.Provider value={{ user, setUser, removeUser }} >\n\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/draw\">\n              <DrawApp />\n            </Route>\n            <Route path=\"/\">\n              <Navigation />\n              <Route exact path=\"/\">\n                <DrawPrint />\n              </Route>\n              <Route path=\"/draw-print\">\n                <DrawPrint />\n              </Route>\n              <Route path=\"/library\">\n                <Library />\n              </Route>\n              <Route path=\"/slicer\">\n                <Slicer />\n              </Route>\n              <Route path=\"/stl-generator\">\n                <STLGenerator />\n              </Route>\n            </Route>\n\n          </Switch>\n        </BrowserRouter>\n      </UserContext.Provider>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n  dsn: \"https://671da45dc307486090d441b0ff074028@o528559.ingest.sentry.io/5646853\",\n  integrations: [new Integrations.BrowserTracing()],\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}